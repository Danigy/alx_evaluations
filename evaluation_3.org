#+TITLE: Evaluation #3

**** In a doubly linked list, what are possible directions to traverse it?

(select all possible answers)

- [X] Forward
- [X] Backward

**** What do these lines print?

#+begin_src python
  >>> a = { 'id': 89, 'name': "John", 'projects': [1, 2, 3, 4], 'friends': [ { 'id': 82, 'name': "Bob" }, { 'id': 83, 'name': "Amy" } ] }
  >>> a.get('friends')[-1].get("name")
#+end_src

- [ ] 89
- [ ] [{'id':82, 'name':"Bob"}, {'id':83, 'name': "Amy"}]
- [X] 'Amy'
- [ ] 'Bob'
- [ ] Nothing

**** What does this print?

#+begin_src python
  >>> a = "Python is cool"
  >>> print(a[7:-5])
#+end_src

- [ ] on
- [ ] nohtyP
- [ ] Python
- [ ] si
- [X] is

**** What is a circular import in Python?

- [X] When two or more modules are dependant on each other.
- [ ] When you import a module for calculating dimensions for circles.
- [ ] When one module imports multiple other modules.

**** What do these lines print?

#+begin_src python
  a = 12
  if a > 2:
      if a % 2 == 0:
          print("Tech")
      else:
          print("C is fun")
  else:
      print("School")
#+end_src

- [X] Tech
- [ ] C is fun
- [ ] School

**** What do these lines print?

#+begin_src python
  for i in range(2, 10, 2):
      print(i, end=" ")
#+end_src

- [ ] 2 3 4 5 6 7 8 9 10
- [ ] 2 3 4 5 6 7 8 9
- [ ] 4 6 8 10 12 14 16 18
- [X] 2 4 6 8

**** What does this print?

#+begin_src python
  >>> print("{:d} Mission street, {}".format(972, "San Francisco"))
#+end_src

- [ ] "972 Mission street, San Francisco"
- [ ] 72 Mission street, San
- [X] 972 Mission street, San Francisco
- [ ] San Francisco Mission street, 972

**** Which symbol should I use to redirect the error output to the standard output?

- [X] 2>&1
- [ ] 1>&2
- [ ] 2>

**** In a doubly linked list, what's the “head” of a linked list?

- [ ] It's the node with the pointer to the next node equals to =NULL=
- [X] It's the node with the pointer to the previous node equals to =NULL=

**** What do these lines print?

#+begin_src python
  >>> def my_function(counter=89):
  >>>     print("Counter: {}".format(counter))
  >>> 
  >>> my_function(12)
#+end_src

- [X] Counter: 12
- [ ] Counter: 89
- [ ] Counter: 101

**** How many bytes will this statement allocate on a 64 bit machine?

=malloc(sizeof(char) * 4)=

- [X] 4
- [ ] 8
- [ ] 12
- [ ] 16

**** What do these lines print?

#+begin_src python
  >>> a = [1, 2, 3, 4]
  >>> a[2] = 10
  >>> a
#+end_src

- [ ] [1, 2, 3, 4]
- [ ] [1, 10, 3, 4]
- [X] [1, 2, 10, 4]
- [ ] [1, 2, 10, 10]

**** You're standing in line at a grocery store, which data type best represents this situation?

- [X] Queue
- [ ] Array
- [ ] Dictionary
- [ ] Stack

**** What do these lines print?

#+begin_src python
  >>> def my_function(counter=89):
  >>>     return counter + 1
  >>> 
  >>> print(my_function())
#+end_src

- [ ] 1
- [ ] 89
- [X] 90
- [ ] 891

**** Which line of code will create a list of every other number from 0 to 10 in reverse in Python?

- [X] list(range(10, 0, -2))
- [ ] array(range(10, 0, -2))
- [ ] list(range(0, 10, -2))
- [ ] array(10, 0, 2))

**** What is the =unistd= symbolic constant for the standard output?

- [ ] STDIN_FILENO
- [X] STDOUT_FILENO
- [ ] STDERR_FIELNO

**** What's wrong with the following C code to get the nth node of a linked list?

Select all correct answers.

#+begin_src c
  #include "lists.h"
  /**
   * get_nodeint_at_index - [ ] finds nth node of a listint_t list
   * @head: list to evaluate
   * @index: index of node to find
   *
   * Return: node found at index (SUCCESS), NULL if node does not exist
   **/

  listint_t *get_nodeint_at_index(listint_t *head, unsigned int index)
  {
          unsigned int i;
          listint_t *ptr;

          if (head == NULL)
                  return (NULL);

          ptr = head;
          i = 0;

          while (i < index)
          {
                  ptr = ptr->next;
                  i++;
          }

          return (ptr);
  }
#+end_src

- [X] There is no check for if =ptr->next= is =NULL= before moving =ptr=
- [ ] The function should not return =NULL= if =head= is not found.
- [X] If =index= is out of range, the program should return =NULL=
- [ ] Nothing is wrong