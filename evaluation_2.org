#+TITLE: Evaluation #2

**** What is the =unistd= symbolic constant for the standard input?

- [X] STDIN_FILENO
- [ ] STDOUT_FILENO
- [ ] STDERR_FILENO

**** =~ 0x98 == ?

- [ ] =0x66=
- [X] =0x67=
- [ ] =0x68=

**** Choose the line of code to replace the comment below so the function prints a given string without a lower or uppercase =c=.

#+begin_src python
  >>>def no_c_print(s):
  ...    new_string = ''
  ...    for character in s:
  ...        # REPLACE THIS LINE              
  ...           new_string += character
  ...    print(new_string)
  ...
  >>> no_c_print("Characters")
  >>>haraters
#+end_src

- [X] =if character not in 'Cc':=
- [X] =if character != 'c' and character != 'C':=
- [ ] =if character != "cC"=

**** In the =main.c= file, on what line is the first error that the compiler returns?

Look at the following code.

#+begin_src
  carrie@ubuntu:/debugging$ cat main.c                                
  #include <stdio.h>                                                                                  

  /**                                                                                                 
   * main - debugging example                                                                         
   * Return: 0                                                                                        
   */                                                                                                 
  int main(void)                                                                                      
  {                                                                                                   
          char *hello = "Hello, World!";                                                              

          for (i = 0; hello[i] != '\0'; i++)                                                          
          {                                                                                           
                  printf("%c", hello[i]);                                                             
          }                                                                                           

          printf("\n");                                                                               

          return (0);                                                                                 
  }                                                                                                   
  carrie@ubuntu:/debugging$
#+end_src

#+begin_src
  carrie@ubuntu:/debugging$ gcc -Wall -Werror -Wextra -pedantic main.
  c                                                                                                   
  main.c: In function ‘main’:                                                                         
  main.c:11:7: error: ‘i’ undeclared (first use in this function)                                     
    for (i = 0; hello[i] != '\0'; i++)                                                                
         ^                                                                                            
  main.c:11:7: note: each undeclared identifier is reported only once for each function it appears in
  main.c:9:8: error: variable ‘hello’ set but not used [-Werror=unused-but-set-variable]              
    char *hello = "Hello, World!";                                                                    
          ^                                                                                           
  cc1: all warnings being treated as errors                                                           
  carrie@ubuntu:/debugging$       
#+end_src

- [ ] 9
- [X] 11
- [ ] 7

**** What is=0b001010010= in base10?

- [ ] 81
- [X] 82
- [ ] 83
- [ ] 84

**** What does this command line print?

#+begin_src python
  >>> a = "Hello, world!"
  >>> print(a[:5])
#+end_src

- [X] Hello
- [ ] world!
- [ ] orld!

**** What is wrong with the following code?

#+begin_src
  int n = 0;
  int array[5];
  int i = 5;

  array[n] = i;
#+end_src

- [X] Nothing is wrong
- [ ] It is impossible to declare the variable =array= this way
- [ ] The array =array= is not entirely initialized
- [ ] It is not possible to access =array[n]=

**** What is =98= in base 16?

- [X] =0x62=
- [ ] =0x98=
- [ ] =0x96=

**** 8. What does this print?

#+begin_src
  >>> print("My favorite line of {} is {:d}.".format("The Zen of Python", 11))
#+end_src

- [X] My favorite line of The Zen of Python is 11.
- [ ] My favorite line of T is 1.
- [ ] My favorite line of The Zen of Python is 1.

**** What are the different steps to form an executable file from C source code?

- [ ] Interpretation, compilation and assembly
- [X] Preprocessing, compilation, assembly, and linking
- [ ] Interpretation, assembly and compilation
- [ ] Compilation and linking
- [ ] Preprocessing and compilation

**** The following code gives this incorrect output.

Which of the following statements about what is causing the error is
true? (select all valid answers)

#+begin_src
  carrie@ubuntu:/debugging$ cat main.c                               
  #include <stdio.h>                                                                                 

  /**                                                                                                
   * main - debugging example                                                                        
   * Return: 0                                                                                       
   */                                                                                                
  int main(void)                                                                                     
  {                                                                                                  
          int i;                                                                                     
          int j;                                                                                     

          for (i = 0; i < 10; i++)                                                                   
          {                                                                                          
                  j = 0;                                                                             
                  while (j < 10)                                                                     
                  {                                                                                  
                          printf("%d", j);                                                           
                  }                                                                                  
                  printf("\n");                                                                      
          }                                                                                          

          return (0);                                                                                
  }                                                                                                  
  carrie@ubuntu:/debugging$
#+end_src

#+begin_src
  carrie@ubuntu:/debugging$ gcc -Wall -Werror -Wextra -pedantic main.c                                                                                                  
  carrie@ubuntu:/debugging$ ./a.out
  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 <...>
  ^Ccarrie@ubuntu:/debugging$
#+end_src

- [ ] =j= never increments so it will always be less than =10=
- [ ] =j= is always equal to =i= so the loop will never end
- [X] =j= never increments so it is always going to print =0=

**** =0x13 << 1= = ?

- [ ] 0x13
- [ ] 0x12
- [X] 0x26
- [ ] 0x4C

**** When I am using =O_WRONLY | O_CREAT | O_APPEND= -> the =|= are bitwise operators.

- [X] True
- [ ] False

**** Choose a statement that would complete the function that returns a string made up of =+= =n= number of times (assuming =n= > 0) .
*Score*: 0.5

#+begin_src python
  >>> def print_plus(n):
  ...         # REPLACE THIS LINE
  ...
  >>> print_plus(3)
  >>> '+++'
  >>> print_plus(4)
  >>> '++++'
#+end_src

- [X] =return n*'+'=
- [X] =return '+'*n=
- [ ] =return ''+n=
- [ ] =return==+n+n+n=

**** Without context, on Ubuntu 14.04 LTS, =write= is a(n) ...

(please select all correct answers)

- [X] executable
- [X] system call
- [ ] library call
- [ ] game

**** What is the correct combination of =oflags= used to open a file with the mode write only, create it if it doesn't exist and append new content at the end if it already exists?

- [ ] =O_WRONLY=
- [ ] =O_WRONLY | O_CREAT | O_EXCL=
- [X] =O_WRONLY | O_CREAT | O_APPEND=
- [ ] =O_RDWR | O_CREAT | O_APPEND=